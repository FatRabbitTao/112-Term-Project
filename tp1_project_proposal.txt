Name:Viola Chen Yitao
Andrew ID: yitaoche

Project description:
The preliminary title for this project is 'Immunity War'. This is an interactive game where the player will play the role of immune system to defend the invasion of viruses (into the body), with real-time-strategy style. ie. control units to move around and attack, construct buildings and farm resources.
The goal of the immune system is to eliminate a given number of viruses (the level of difficulty could increase with increasing number of viruses being killed), whereaas the goal of the viruses is to destroy all the buildings of the immune system.

Competitive analysis:
This project aims to learn from well-made real-time-strategy games such as StarCraft2 or WarCraft3.This project would be similar to those mentioned above in terms of the general game set-up and basic game-play such as movements, constructions, grouping of units and even key-binding.
However, this project would be different from those mentioned above in terms of winning/losing conditions and the significantly different goals of the 2 parties in opposition.

Structural plan:
The final project will have 4 files. 1 is the main file that contains the game loop and all the events functions. The second file would be one that contains the class player and all its relevant informations, such as cells of the immune system, the buildings that have been built. The third file will contain all the information about the attacker, including the class viruses and all its methods, the intended simple game AI would also be in this file. The last file would be the terrain ie. map that the game would take place in, and its relevant constraints. 

Algorithmic plan:
I think there are 2 parts that are algorithmically challenging. 
1) a playable game AI and its decision making. I plan to adapt from the minimax algorithm but individual and collective decision making can be tricky.
2) terrain generation to make sure there is a way to reach all places and hopefully no dead end either.This will probably be done with some sort of backtracking.

Timeline plan:
Week 1: basic class structures
Week 2: playable AI, terrain generation
Week 3: graphics, user interface improvement

Version control plan:
I back up my code daily onto my private github repository. Different versions are named differently as tpx.y_filename.py, where x is the week and y is the different versions, aided by each commit messages.

Module list:
pygame

